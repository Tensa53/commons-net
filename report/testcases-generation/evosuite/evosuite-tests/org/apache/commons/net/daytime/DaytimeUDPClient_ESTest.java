/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 07 18:48:51 GMT 2023
 */

package org.apache.commons.net.daytime;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.net.InetAddress;
import org.apache.commons.net.daytime.DaytimeUDPClient;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DaytimeUDPClient_ESTest extends DaytimeUDPClient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DaytimeUDPClient daytimeUDPClient0 = new DaytimeUDPClient();
      byte[] byteArray0 = new byte[4];
      daytimeUDPClient0.open();
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, byteArray0);
      InetAddress inetAddress0 = daytimeUDPClient0.getLocalAddress();
      String string0 = daytimeUDPClient0.getTime(inetAddress0, 0);
      assertEquals("\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DaytimeUDPClient daytimeUDPClient0 = new DaytimeUDPClient();
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 2707);
      byte[] byteArray0 = new byte[0];
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, byteArray0);
      InetAddress inetAddress0 = MockInetAddress.getByName("");
      daytimeUDPClient0.open();
      String string0 = daytimeUDPClient0.getTime(inetAddress0, 2707);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DaytimeUDPClient daytimeUDPClient0 = new DaytimeUDPClient();
      byte[] byteArray0 = new byte[4];
      daytimeUDPClient0.open();
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, byteArray0);
      InetAddress inetAddress0 = daytimeUDPClient0.getLocalAddress();
      String string0 = daytimeUDPClient0.getTime(inetAddress0);
      assertEquals("\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DaytimeUDPClient daytimeUDPClient0 = new DaytimeUDPClient();
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 2707);
      byte[] byteArray0 = new byte[0];
      NetworkHandling.sendUdpPacket(evoSuiteLocalAddress0, evoSuiteRemoteAddress0, byteArray0);
      InetAddress inetAddress0 = MockInetAddress.getByName("");
      daytimeUDPClient0.open();
      String string0 = daytimeUDPClient0.getTime(inetAddress0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DaytimeUDPClient daytimeUDPClient0 = new DaytimeUDPClient();
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      // Undeclared exception!
      try { 
        daytimeUDPClient0.getTime(inetAddress0, 13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // DatagramSocket
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DaytimeUDPClient daytimeUDPClient0 = new DaytimeUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      // Undeclared exception!
      try { 
        daytimeUDPClient0.getTime(inetAddress0, (-239));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Port out of range:-239
         //
         verifyException("java.net.DatagramPacket", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DaytimeUDPClient daytimeUDPClient0 = new DaytimeUDPClient();
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      // Undeclared exception!
      try { 
        daytimeUDPClient0.getTime(inetAddress0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // DatagramSocket
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DaytimeUDPClient daytimeUDPClient0 = new DaytimeUDPClient();
      daytimeUDPClient0.open();
      InetAddress inetAddress0 = daytimeUDPClient0.getLocalAddress();
      try { 
        daytimeUDPClient0.getTime(inetAddress0, 0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IO exception
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoDatagramSocketImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DaytimeUDPClient daytimeUDPClient0 = new DaytimeUDPClient();
      daytimeUDPClient0.open();
      InetAddress inetAddress0 = daytimeUDPClient0.getLocalAddress();
      try { 
        daytimeUDPClient0.getTime(inetAddress0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IO exception
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoDatagramSocketImpl", e);
      }
  }
}
