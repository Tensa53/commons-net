/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 07 18:57:59 GMT 2023
 */

package org.apache.commons.net.bsd;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.net.InetAddress;
import java.net.Proxy;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.commons.net.bsd.RCommandClient;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RCommandClient_ESTest extends RCommandClient_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      // Undeclared exception!
      try { 
        rCommandClient0.rcommand("", (String) null, "(*BD&Tp/hYNLjVt$7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.bsd.RExecClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      InetAddress inetAddress0 = MockInetAddress.getByName("l;iWZ)N;9y_{");
      try { 
        rCommandClient0.connect("", (-664), inetAddress0, 392);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid port number 392
         //
         verifyException("org.apache.commons.net.bsd.RCommandClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          RCommandClient rCommandClient0 = new RCommandClient();
          // Undeclared exception!
          try { 
            rCommandClient0.connect("", 1715, (InetAddress) null, 788);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"127.0.0.1:1715\" \"connect,resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1564)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.lang.SecurityManager.checkConnect(SecurityManager.java:1051)
             // java.net.Socket.connect(Socket.java:602)
             // org.apache.commons.net.SocketClient._connect(SocketClient.java:136)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:289)
             // org.apache.commons.net.bsd.RCommandClient.connect(RCommandClient.java:213)
             // sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:750)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          RCommandClient rCommandClient0 = new RCommandClient();
          InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
          InetAddress inetAddress1 = MockInetAddress.getByName("");
          // Undeclared exception!
          try { 
            rCommandClient0.connect(inetAddress0, 1023, inetAddress1, 1023);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"localhost:1023\" \"listen,resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1564)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.lang.SecurityManager.checkListen(SecurityManager.java:1131)
             // java.net.Socket.bind(Socket.java:660)
             // org.apache.commons.net.SocketClient._connect(SocketClient.java:134)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:242)
             // org.apache.commons.net.bsd.RCommandClient.connect(RCommandClient.java:154)
             // sun.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:750)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      try { 
        rCommandClient0.connect(inetAddress0, 0, inetAddress0, 60000);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid port number 60000
         //
         verifyException("org.apache.commons.net.bsd.RCommandClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          RCommandClient rCommandClient0 = new RCommandClient();
          InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
          // Undeclared exception!
          try { 
            rCommandClient0.connect(inetAddress0, 512, inetAddress0, 512);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"localhost:512\" \"listen,resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1564)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.lang.SecurityManager.checkListen(SecurityManager.java:1131)
             // java.net.Socket.bind(Socket.java:660)
             // org.apache.commons.net.SocketClient._connect(SocketClient.java:134)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:242)
             // org.apache.commons.net.bsd.RCommandClient.connect(RCommandClient.java:154)
             // sun.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:750)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      try { 
        rCommandClient0.connect((InetAddress) null, (-3522), (InetAddress) null, 1023);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-3522
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      rCommandClient0.setProxy((Proxy) null);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 514);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      rCommandClient0.connect(inetAddress0, 514, inetAddress0, 514);
      try { 
        rCommandClient0.rcommand("\r\n", "\r\n", "t`s&t\"U;W~");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Server closed connection.
         //
         verifyException("org.apache.commons.net.bsd.RExecClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      rCommandClient0.setProxy((Proxy) null);
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      try { 
        rCommandClient0.connect(inetAddress0, 514, inetAddress0, 514);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@51a7678
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      // Undeclared exception!
      try { 
        rCommandClient0.connect(inetAddress0, (-2054), inetAddress0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-2054
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      Proxy proxy0 = Proxy.NO_PROXY;
      rCommandClient0.setProxy(proxy0);
      try { 
        rCommandClient0.connect(inetAddress0, 1023, inetAddress0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@3f357578
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      // Undeclared exception!
      try { 
        rCommandClient0.connect(inetAddress0, (-3025));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-3025
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      rCommandClient0.setProxy((Proxy) null);
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      try { 
        rCommandClient0.connect(inetAddress0, 512);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@3f353797
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      Proxy proxy0 = Proxy.NO_PROXY;
      rCommandClient0.setProxy(proxy0);
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      try { 
        rCommandClient0.connect("\r\n", 1023, inetAddress0, 1023);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@293ab2d2
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      // Undeclared exception!
      try { 
        rCommandClient0.connect("\r\n", (-2462), inetAddress0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-2462
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      rCommandClient0.setProxy((Proxy) null);
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      try { 
        rCommandClient0.connect("\r\n", 514, inetAddress0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@293a752f
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      Proxy proxy0 = Proxy.NO_PROXY;
      rCommandClient0.setProxy(proxy0);
      try { 
        rCommandClient0.connect("\r\n", 512);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@293a74f1
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      // Undeclared exception!
      try { 
        rCommandClient0.connect((InetAddress) null, 512, (InetAddress) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.Socket", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      // Undeclared exception!
      try { 
        rCommandClient0.rcommand("\r\n", "\r\n", "\r\n", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.bsd.RExecClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      // Undeclared exception!
      try { 
        rCommandClient0.createErrorStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.net.SocketClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      try { 
        rCommandClient0.connect("\r\n", 3237, inetAddress0, 3237);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid port number 3237
         //
         verifyException("org.apache.commons.net.bsd.RCommandClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          RCommandClient rCommandClient0 = new RCommandClient();
          InetAddress inetAddress0 = MockInetAddress.getLocalHost();
          // Undeclared exception!
          try { 
            rCommandClient0.connect("\r\n", 512, inetAddress0, 512);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.net.SocketPermission\" \"localhost:512\" \"listen,resolve\")
             // java.lang.Thread.getStackTrace(Thread.java:1564)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.lang.SecurityManager.checkListen(SecurityManager.java:1131)
             // java.net.Socket.bind(Socket.java:660)
             // org.apache.commons.net.SocketClient._connect(SocketClient.java:134)
             // org.apache.commons.net.SocketClient.connect(SocketClient.java:289)
             // org.apache.commons.net.bsd.RCommandClient.connect(RCommandClient.java:213)
             // sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:750)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      try { 
        rCommandClient0.connect(inetAddress0, (-769), inetAddress0, (-769));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid port number -769
         //
         verifyException("org.apache.commons.net.bsd.RCommandClient", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      // Undeclared exception!
      try { 
        rCommandClient0.connect("\r\n", (-2077));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-2077
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RCommandClient rCommandClient0 = new RCommandClient();
      // Undeclared exception!
      try { 
        rCommandClient0.connect((InetAddress) null, 1023);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.Socket", e);
      }
  }
}
